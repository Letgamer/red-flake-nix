# Auto-generated using compose2nix v0.3.2-pre.
# https://github.com/aksiksi/compose2nix
# nix run github:aksiksi/compose2nix -- -project=bloodhound
# 
{ pkgs, lib, config, ... }:

{
  # Containers
  virtualisation.oci-containers.containers."bloodhound-app-db" = {
    autoStart = true;
    image = "docker.io/library/postgres:16";
    environment = {
      "PGUSER" = "bloodhound";
      "POSTGRES_DB" = "bloodhound";
      "POSTGRES_PASSWORD" = "bloodhoundcommunityedition";
      "POSTGRES_USER" = "bloodhound";
    };
    volumes = [
      "bloodhound_postgres-data:/var/lib/postgresql/data:rw"
    ];
    networks = [ 
      "bloodhound_default"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=bloodhound-app-db"
      "--network=bloodhound_default"
    ];
  };

  virtualisation.oci-containers.containers."bloodhound-bloodhound" = {
    autoStart = true;
    image = "docker.io/specterops/bloodhound:latest";
    environment = {
      "bhe_database_connection" = "user=bloodhound password=bloodhoundcommunityedition dbname=bloodhound host=bloodhound-app-db";
      "bhe_disable_cypher_complexity_limit" = "false";
      "bhe_enable_cypher_mutations" = "false";
      "bhe_graph_driver" = "neo4j";
      "bhe_graph_query_memory_limit" = "2";
      "bhe_neo4j_connection" = "neo4j://neo4j:bloodhoundcommunityedition@bloodhound-graph-db:7687/";
      "bhe_recreate_default_admin" = "false";
    };
    networks = [ 
      "bloodhound_default"
    ];
    ports = [
      "127.0.0.1:8080:8080/tcp"
    ];
    dependsOn = [
      "bloodhound-app-db"
      "bloodhound-graph-db"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=bloodhound-bloodhound"
      "--network=bloodhound_default"
    ];
  };

  virtualisation.oci-containers.containers."bloodhound-graph-db" = {
    autoStart = true;
    image = "docker.io/library/neo4j:4.4.42";
    environment = {
      "NEO4J_AUTH" = "neo4j/bloodhoundcommunityedition";
      "NEO4J_dbms_allow__upgrade" = "true";
    };
    volumes = [
      "bloodhound_neo4j-data:/data:rw"
    ];
    networks = [ 
      "bloodhound_default"
    ];
    ports = [
      "127.0.0.1:7687:7687/tcp"
      "127.0.0.1:7474:7474/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=bloodhound-graph-db"
      "--network=bloodhound_default"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-bloodhound-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
